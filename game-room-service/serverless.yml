service: room
frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221

custom:
  chime: "https://service.chime.aws.amazon.com"

functions:
  JoinGameRoom:
    handler: /lambda-functions/application/room-handler.join
    role: GameRoomsRole
    environment:
      ROOM_TABLE_NAME: !Ref GameRooms
      CHIME_ENDPOINT: ${self:custom.chime}
    events:
      - http:
          path: /room/{roomId}
          method: GET

  CreateGameRoom:
    handler: /lambda-functions/application/room-handler.createGameRoom
    role: GameRoomsRole
    environment:
      ROOM_TABLE_NAME: !Ref GameRooms
      CHIME_ENDPOINT: ${self:custom.chime}
    events:
      - http:
          path: /room
          method: POST

  RemoveGameRoom:
    handler: /lambda-functions/application/room-handler.endGameRoom
    role: GameRoomsRole
    environment:
      ROOM_TABLE_NAME: !Ref GameRooms
      CHIME_ENDPOINT: ${self:custom.chime}
    events:
      - http:
          path: /room/{roomId}
          method: DELETE

  GetRandomCards:
    handler: /lambda-functions/application/card-handler.getTwoRandomCards
    events:
      - http:
          path: /card
          method: GET

# you can add CloudFormation resource templates here
resources:
  Resources:
    GameRooms:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: GameRooms
        AttributeDefinitions:
          - AttributeName: "roomId"
            AttributeType: "S"
        TimeToLiveSpecification:
          AttributeName: "TTL"
          Enabled: true
        BillingMode: PAY_PER_REQUEST
        KeySchema:
          - AttributeName: "roomId"
            KeyType: HASH

    GameRoomsRole:    
      Type: AWS::IAM::Role
      Properties:
        Path: "/"
        Policies:
          -
            PolicyName: "GameRoomsRole"
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                -
                  Effect: "Allow"
                  Action:
                    - "dynamodb:BatchGetItem"
                    - "dynamodb:BatchWriteItem"
                    - "dynamodb:PutItem"
                    - "dynamodb:GetItem"
                    - "dynamodb:Scan"
                    - "dynamodb:Query"
                    - "dynamodb:UpdateItem"
                    - "dynamodb:UpdateTable"
                    - "dynamodb:GetRecords"
                  Resource: !GetAtt GameRooms.Arn
        AssumeRolePolicyDocument:
            Version: "2012-10-17"
            Statement:
            -
              Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
                  - dynamodb.amazonaws.com
              Action: sts:AssumeRole

#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
